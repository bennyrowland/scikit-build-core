name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  lint:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage manual --all-files
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  checks:
    name:
      Check üêç ${{ matrix.python-version }} ‚Ä¢ CMake ${{ matrix.cmake-version }}
      on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
        runs-on: [ubuntu-latest]
        cmake-version: ["3.15.x"]

        include:
          - python-version: "3.8"
            runs-on: ubuntu-latest
            cmake-version: "3.21.x"
    continue-on-error: ${{ endsWith(matrix.python-version, '-dev') }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run:
          pip install .[test,cov] cmake ninja rich hatch-fancy-pypi-readme
          setuptools-scm

      - name: Test package
        run: pytest -ra --showlocals --cov=scikit_build_core -k test_abi3_wheel

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.1
        with:
          name: ${{ runner.os }}-${{ matrix.python-version }}

      # the min requirements are not compatible with the metadata plugin
      # packages so we remove those first (they then won't be tested)
      - name: Min requirements
        run: |
          pip uninstall -y cmake hatch-fancy-pypi-readme setuptools-scm
          pip install --constraint tests/constraints.txt .[test]

      - name: Setup CMake ${{ matrix.cmake-version }}
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: "${{ matrix.cmake-version }}"

      - name: Test min package
        run: pytest -ra --showlocals

  dist:
    name: Distribution build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: hynek/build-and-inspect-python-package@v1

  pass:
    if: always()
    needs: [lint, checks, cygwin, dist]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
